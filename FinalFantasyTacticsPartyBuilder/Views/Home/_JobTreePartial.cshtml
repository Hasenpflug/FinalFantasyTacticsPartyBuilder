@using FinalFantasyTacticsPartyBuilder.View_Models;
@model Dictionary<string, List<JobTreantNodeViewModel>>

<div id="job-tree-container" class="menu">
    <div id="job-overview-scroll-right" class="job-overview-scroll-indicator">
        <svg width="25" height="300" style="opacity:0.5">
            <polyline points="25,100 0,75 0,125" />
            <polyline points="25,175 0,150 0,200" />
            <polyline points="25,250 0,225 0,275" />
        </svg>
    </div>
    <div id="job-overview-scroll-bottom" class="job-overview-scroll-indicator">
        <svg width="200" height="25" style="opacity:0.5">
            <polyline points="0,0 25,25 50,0" />
            <polyline points="75,0 100,25 125,0" />
            <polyline points="175,25 150,0 200,0" />
        </svg>
    </div>
    <div id="job-overview-scroll-top" class="job-overview-scroll-indicator">
        <svg width="200" height="25" style="opacity:0.5">
            <polyline points="0,25 25,0 50,25" />
            <polyline points="75,25 100,0 125,25" />
            <polyline points="150,25 175,0 200,25" />
        </svg>
    </div>
    <div id="job-overview-scroll-left" class="job-overview-scroll-indicator">
        <svg width="25" height="300" style="opacity:0.5">
            <polyline points="25,75 0,100 25,125" />
            <polyline points="25,150 0,175 25,200" />
            <polyline points="25,225 0,250 25,275" />
        </svg>
    </div>
    <strong id="job-tree-close">X</strong>
    <div id="tree-squire-chart" class="tree-chart"></div>
    <div id="tree-chemist-chart" class="tree-chart"></div>
    <div id="tree-onion-chart" class="tree-chart"></div>
    <div id="tree-mime-chart" class="tree-chart"></div>
    <div id="tree-dark-chart" class="tree-chart"></div>
</div>
<script type="text/javascript">
    squire_chart_config = {
        chart: {
            container: "#tree-squire-chart",
            rootOrientation: "WEST",
            connectors: {
                type: "step",
                style: {
                    "arrow-end": "block",
                    "stroke-width": 3
                }
            },
            levelSeparation: 50,
            siblingSeparation: 0,
            subTeeSeparation: 5
        },
        nodeStructure: {
            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["KnightPre"]).ToString().Replace('"', '\'')))",
            children: [
                {
                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["MonkPre"]).ToString().Replace('"', '\'')))",
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["SamuraiPre"]).ToString().Replace('"', '\'')))",
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Samurai"]).ToString().Replace('"', '\'')))",
                                }
                            ]
                        },
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["GeomancerPre"]).ToString().Replace('"', '\'')))",
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Geomancer"]).ToString().Replace('"', '\'')))",

                                }
                            ]
                        }
                    ]
                },
                {
                    pseudo: true,
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["DancerPre"]).ToString().Replace('"', '\'')))",
                            
                            childrenDropLevel: 1,
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Dancer"]).ToString().Replace('"', '\'')))",                                    
                                }
                            ]
                        }
                    ]
                },
                {
                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["ThiefPre"]).ToString().Replace('"', '\'')))",
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["DragoonPre"]).ToString().Replace('"', '\'')))",
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Dragoon"]).ToString().Replace('"', '\'')))",

                                }
                            ]
                        },
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["NinjaPre"]).ToString().Replace('"', '\'')))",                            
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Ninja"]).ToString().Replace('"', '\'')))",
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }

    chemist_chart_config = {
        chart: {
            container: "#tree-chemist-chart",
            rootOrientation: "WEST",
            connectors: {
                type: "step",
                style: {
                    "arrow-end": "block",
                    "stroke-width": 3
                }
            },
            levelSeparation: 50,
            siblingSeparation: 0,
            subTeeSeparation: 5
        },
        nodeStructure: {
            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["White MagePre"]).ToString().Replace('"', '\'')))",
            children: [
                {
                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["MysticPre"]).ToString().Replace('"', '\'')))",
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["OratorPre"]).ToString().Replace('"', '\'')))",                            
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Orator"]).ToString().Replace('"', '\'')))",
                                }
                            ]
                        }
                    ]
                },
                {
                    pseudo: true,
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["BardPre"]).ToString().Replace('"', '\'')))",                            
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Bard"]).ToString().Replace('"', '\'')))",
                                }
                            ]
                        }
                    ]
                },
                {
                    pseudo: true,
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["ArithmeticianPre"]).ToString().Replace('"', '\'')))",                            
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Arithmetician"]).ToString().Replace('"', '\'')))",
                                }
                            ]
                        }
                    ]
                },
                {
                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Time MagePre"]).ToString().Replace('"', '\'')))",
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["SummonerPre"]).ToString().Replace('"', '\'')))",
                            children: [
                                {
                                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Summoner"]).ToString().Replace('"', '\'')))",
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    };

    onion_chart_config = {
        chart: {
            container: "#tree-onion-chart",
            rootOrientation: "NORTH",
            connectors: {
                type: "step",
                style: {
                    "arrow-end": "block",
                    "stroke-width": 3
                }
            },
            levelSeparation: 50,
            siblingSeparation: 0,
            subTeeSeparation: 0,
            hideRootNode: true
        },
        nodeStructure: {
            children: [
                {
                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Onion Knight (8)Pre"]).ToString().Replace('"', '\'')))",                    
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Onion Knight (8)"]).ToString().Replace('"', '\'')))",
                        }
                    ]
                }
            ]
        }
    };

    mime_chart_config = {
        chart: {
            container: "#tree-mime-chart",
            rootOrientation: "NORTH",
            connectors: {
                type: "step",
                style: {
                    "arrow-end": "block",
                    "stroke-width": 3
                }
            },
            levelSeparation: 50,
            siblingSeparation: 0,
            subTeeSeparation: 5,
            hideRootNode: true
        },
        nodeStructure: {
            children: [
                {
                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["MimePre"]).ToString().Replace('"', '\'')))",                    
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Mime"]).ToString().Replace('"', '\'')))",
                        }
                    ]
                }
            ]
        }
    };

    dark_chart_config = {
        chart: {
            container: "#tree-dark-chart",
            rootOrientation: "NORTH",
            connectors: {
                type: "step",
                style: {
                    "arrow-end": "block",
                    "stroke-width": 3
                }
            },
            levelSeparation: 50,
            siblingSeparation: 0,
            subTeeSeparation: 5,
            hideRootNode: true
        },
        nodeStructure: {
            children: [
                {
                    innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Dark KnightPre"]).ToString().Replace('"', '\'')))",                    
                    children: [
                        {
                            innerHTML: "@(Html.Raw(Html.Partial(@"~\Views\Home\_JobTreantNodePartial.cshtml", Model["Dark Knight"]).ToString().Replace('"', '\'')))",
                        }
                    ]
                }
            ]
        }
    };

    (function drawTreantJobTree() {
        var squire_chart = new Treant(squire_chart_config);
        var chemist_chart = new Treant(chemist_chart_config);
        var onionChart = new Treant(onion_chart_config);
        var mimeChart = new Treant(mime_chart_config);
        var darkChart = new Treant(dark_chart_config);
    })();
</script>
